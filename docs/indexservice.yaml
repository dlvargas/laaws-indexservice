swagger: '2.0'
info:
  version: '1.0.0'
  title: LOCKSS IndexService API
  description: A preliminary API for the LAAWS IndexService
  termsOfService: http://www.lockss.org/terms/
  contact:
    name: Daniel Vargas
    email: dlvargas@stanford.edu
    url: http://www.lockss.org/
  license:
    name: BSD 
    url: https://www.lockss.org/license.txt
host: laaws.lockss.org:443
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /warcs:
    get:
      ### TODO: Needs a limit
      description: Returns a list of WARCs in the index
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/warc_index'
        204:
          description: No WARCs indexed
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /warcs/{uri}:
    get:
      description: Returns the status of the WARC referenced by URI
      parameters:
        - name: uri
          in: path
          description: URI to the WARC of interest
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/warc_index'
        404:
          description: URI not found in index
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      description: Removes the WARC referenced by URI from the index
      parameters:
        - name: uri
          in: path
          description: URI to remove from the index
          required: true
          type: string
      responses:
        204:
          description: WARC removed successfully
        404:
          description: URI not found in index
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /warcs/{uri}/auids:
    get:
      ### TODO: Needs a limit
      description: Returns all AUIDs contained in the WARC file referenced by URI
      parameters:
        - name: uri
          in: path
          description: URI to the WARC of interest
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/au'
        404:
          description: URI not found in index
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /warcs/{uri}/urls:
      ### TODO: Needs a limit
    get:
      description: Returns all URLs contained in the WARC file referenced by URI
      parameters:
        - name: uri
          in: path
          description: URI to the WARC of interest
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/url'
        404:
          description: URI not found in index
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /index/warc/{uri}:
    put:
      description: Queues the WARC at the URI into a queue for (re)indexing
      parameters:
        - name: uri
          in: path
          description: URI of the WARC file to index
          required: true
          type: string
      responses:
        201:
          description: A job for this URI has been queued; returns job ID
          schema:
            $ref: '#/definitions/job'
        400:
          description: Bad URI
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /indexjobs:
    ### TODO: pageation
    get:
      description: Returns queued index jobs
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/job'
              
        204:
          description: No jobs found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      description: Cancels all index jobs waiting in the queue
      responses:
        204:
          description: All jobs removed from queue
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /indexjobs/{id}:
    get:
      description: Returns the status of the index job
      parameters:
        - name: id
          in: path
          description: Job ID
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/job'
        404:
          description: Job not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      description: Cancels the index job if it is waiting in the queue
      parameters:
        - name: id
          in: path
          description: Job ID
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: Job removed from queue
        404:
          description: Job not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    put:
      description: Requeues a stopped or failed job
      parameters:
        - name: id
          in: path
          description: Job ID
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: OK
        404:
          description: Job not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /aus:
    ### TODO
    get:
      description: Returns all AUIDs in the index
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/au'
        204:
          description: No AUs indexed
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /aus/{auid}:
    get:
      description: Returns information and statistics about the AU referenced by AUID
      parameters:
        - name: auid
          in: path
          description: AUID of interest
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/au'
        404:
          description: AU not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /aus/{auid}/urls:
    ### TODO
    get:
      description: Returns all URLs in the AU referenced by AUID
      parameters:
        - name: auid
          in: path
          description: AUID of interest
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/url'
        404:
          description: AU not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /aus/{auid}/warcs:
    ### TODO
    get:
      description: Returns all WARC files which contain one or more records belonging to the AU referenced by AUID
      parameters:
        - name: auid
          in: path
          description: AUID of interest
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/warc_index'
        404:
          description: AU not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /urls:
    ### TODO
    get:
      description: Returns all URLs in the index
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/url'
        204:
          description: No URLs indexed
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /urls/{url}:
    ### TODO
    get:
      description: Returns the WARC and offset of all versions of the URL (OpenWayback)
      parameters:
        - name: url
          in: path
          description: URL of interest
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/warc_record_index'
        404:
          description: URL not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /urls/{url}/{version}:
    get:
      description: Returns the WARC and offset of the specified verion of the URL (OpenWayback)
      parameters:
        - name: url
          in: path
          description: URL of interest
          required: true
          type: string
        - name: version
          in: path
          description: The version (represented as a UNIX timestamp) of URL to return
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/warc_record_index'
        404:
          description: URL or URL version not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /urls/{url}/auids:
    ### TODO
    get:
      description: Returns all AUIDs containing the URL
      parameters:
        - name: url
          in: path
          description: URL of interest
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/au'
        404:
          description: URL not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /urls/{url}/warcs:
    ### TODO
    get:
      description: Returns all WARCs containing the URL
      parameters:
        - name: url
          in: path
          description: URL of interest
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/warc_index'
        404:
          description: URL not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
definitions:
  au:
    type: object
    required:
      - auid
    properties:
      auid:
        type: string
  warc_index:
    type: object
    required:
      - uri
    properties:
      uri:
        type: string
      indexed:
        type: boolean
      indexed_at:
        type: integer
        format: int32
      status:
        type: integer
  warc_record_index:
    type: object
    required: 
      - uri
      - timestamp
      - offset
    properties:
      uri:
        type: string
      timestamp:
        type: integer
        format: int32
      offset:
        type: integer
        format: int32
  job:
    type: object
    required:
      - id
      - status
      - warc
    properties:
      id:
        type: integer
        format: int64
      status:
        type: string
      warc:
        $ref: '#/definitions/warc_index'
  url:
    type: object
    required:
      - url
    properties:
      url:
        type: string
      warc_record_index:
        $ref: '#/definitions/warc_record_index'
  errorModel:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
